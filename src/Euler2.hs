module Euler2(evenFibSum) where
  
--Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
--By starting with 1 and 2, the first 10 terms will be:
--
--1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
--
--By considering the terms in the Fibonacci sequence whose values do not exceed four million,
--find the sum of the even-valued terms.  

evenFibSum :: (Integer, Integer, Integer) -> Integer
evenFibSum (first, second, limiter) =
  if first + second > limiter then 0
  else evenChecker(first + second) + evenFibSum(second, first + second, limiter)

evenChecker :: Integer -> Integer 
evenChecker x = 
  if even x then x
  else 0

  
  

